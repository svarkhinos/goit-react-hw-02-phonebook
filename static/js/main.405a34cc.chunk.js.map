{"version":3,"sources":["components/Contact/Contact.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","components/Section/Section.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","form","this","label","htmlFor","input","type","onChange","pattern","required","id","btn","Component","Filter","Contact","onDeleteContact","listItem","onClick","ContactList","contacts","list","map","App","filter","formSubmitHandler","data","undefined","find","contact","newContact","prevState","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.405a34cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contact_listItem__1E7rq\",\"btn\":\"Contact_btn__3OJ5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1RT8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__9bacc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__vIfmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__21rAR\",\"input\":\"Form_input__2AJVr\",\"btn\":\"Form_btn__3XZ4b\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2>{title}</h2>} {children}\r\n    </section>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor={this.nameInputId}>\r\n          Name\r\n        </label>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={this.nameInputId}\r\n        />\r\n\r\n        <label className={s.label} htmlFor={this.numberInputId}>\r\n          Phone\r\n        </label>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleInputChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={this.numberInputId}\r\n        />\r\n\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <input className={s.input} type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nconst Contact = ({ id, name, number, onDeleteContact }) => (\r\n  <li className={s.listItem} key={id}>\r\n    <p>\r\n      {name} : {number}\r\n    </p>\r\n    <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import Contact from '../Contact/Contact';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Contact\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          key={id}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import './App.css';\nimport { Component } from 'react';\nimport shortid from 'shortid';\nimport Section from './components/Section/Section';\nimport Form from './components/Form/Form';\n\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    if (\n      this.state.contacts.find(contact => contact.name === data.name) ===\n      undefined\n    ) {\n      const newContact = {\n        id: shortid.generate(),\n        name: data.name,\n        number: data.number,\n      };\n\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    } else alert(`${data.name}is already in contacts`);\n  };\n\n  changeFilter = event => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        Homework-2\n        <Section title=\"Phone-book\">\n          <Form onSubmit={this.formSubmitHandler} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n          {/* <Contacts contacts={visibleContacts} /> */}\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}